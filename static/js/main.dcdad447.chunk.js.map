{"version":3,"sources":["components/button.js","components/header.js","components/Footer.js","components/Task.js","components/Tasks.js","components/AddTask.js","App.js","reportWebVitals.js","index.js"],"names":["Button","color","text","onClick","style","backgroundColor","className","defaultProps","Header","title","onAdd","showAdd","Footer","Task","task","onDelete","onToggle","reminder","onDoubleClick","id","day","cursor","Tasks","tasks","map","AddTask","useState","setText","setDay","setReminder","onSubmit","e","preventDefault","alert","type","placeholder","value","onChange","target","checked","currentTarget","Clock","props","state","date","Date","this","timerID","setInterval","tick","clearInterval","setState","toLocaleString","React","Component","App","showAddTask","setShowAddTask","setTasks","useEffect","a","fetchTasks","tasksFromServer","getTasks","fetch","res","json","data","console","log","fetchTask","addTask","method","headers","body","JSON","stringify","deleteTask","filter","toggleReminder","taskToToggle","updTask","length","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.dcdad447.chunk.js","sourcesContent":["import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst Button = ({color, text, onClick}) => {\r\n\r\n    \r\n    return <button \r\n    onClick={onClick}\r\n    style={{backgroundColor: color}}\r\n     className='btn'\r\n     >\r\n         {text}\r\n    </button>\r\n}\r\nButton.defaultProps = {\r\n    color: 'steelblue'\r\n}\r\nButton.propTypes = {\r\n    text: PropTypes.string,\r\n    color: PropTypes.string,\r\n    onClick: PropTypes.func,\r\n}\r\n\r\nexport default Button\r\n","import React from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport Button from './button' \r\n\r\n\r\nconst Header = ({title, onAdd, showAdd}) => {\r\n    \r\n    return (\r\n        <header className='header'>\r\n            <h1 >{title}</h1>\r\n            <Button color={showAdd ? 'red' : 'green'} text={showAdd ? 'Close' : 'Add'} onClick={onAdd} />\r\n            \r\n            \r\n        </header>\r\n    );\r\n}\r\n\r\nHeader.defaultProps = {\r\n    title: 'Task Tracker'\r\n}\r\nHeader.propTypes = {\r\n    title: PropTypes.string.isRequired,\r\n    \r\n}\r\n\r\n\r\nexport default Header\r\n","\r\nimport React from 'react'\r\n\r\nconst Footer = () => {\r\n    return (\r\n        <footer>\r\n          <p> Copyright &copy; 2021</p>\r\n          \r\n        </footer>\r\n    )\r\n}\r\n\r\nexport default Footer","import { FaTimes} from 'react-icons/fa';\r\n\r\nconst Task = ({ task, onDelete, onToggle }) => {\r\n    return (\r\n        <div className={`task ${task.reminder ? 'reminder' : ''}`} onDoubleClick={() => onToggle(task.id)}>\r\n             <div className=\"h3\">\r\n                 <div>\r\n                   <h2>\r\n                    {task.text}\r\n                   </h2>\r\n                   <p>\r\n                    {task.day}\r\n                   </p> \r\n                  \r\n                 </div>\r\n                 <div>\r\n                 <FaTimes style={{color: 'red', cursor: 'pointer'}}\r\n                  onClick= { () => onDelete(task.id) }\r\n                 />\r\n                 </div>\r\n                 \r\n                \r\n                 \r\n                 </div>\r\n           \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Task\r\n","import Task from './Task'\r\n\r\nconst Tasks = ({ tasks, onDelete, onToggle }) => {\r\n    \r\n    return (\r\n        <>\r\n            {tasks.map((task) => (\r\n            <Task key={task.id} task={task} onDelete={onDelete} onToggle={onToggle} />\r\n            ))}\r\n        </>\r\n    );\r\n}\r\n\r\nexport default Tasks","import { useState } from 'react';\r\n\r\nconst AddTask = ( {onAdd} ) => {\r\n    const [text, setText] = useState('')\r\n    const [day, setDay] = useState('')\r\n    const [reminder, setReminder] = useState(false)\r\n\r\n    const onSubmit = (e) => {\r\n        e.preventDefault()\r\n\r\n        if (!text) {\r\n            alert('Please add a task')\r\n            return\r\n        }\r\n        onAdd( {text, day, reminder})\r\n\r\n        setText('')\r\n        setDay('')\r\n        setReminder(false)\r\n    }\r\n    return (\r\n        <form className='add-form' onSubmit={onSubmit}>\r\n            <div className='form-control'>\r\n                <label className='form-control-check-label'>Task</label>\r\n                <input className='form-control-check-input' \r\n                type=\"text\" \r\n                placeholder='Add Task' \r\n                value={text}\r\n                onChange={(e) => setText(e.target.value)} \r\n                />\r\n            </div>\r\n            <div className='form-control'>\r\n                <label className='form-control-check-label'>Day & Time</label>\r\n                <input className='form-control-check-input' \r\n                type=\"text\" \r\n                placeholder='Add Day & Time'\r\n                value={day}\r\n                onChange={(e) => setDay(e.target.value)}  />\r\n            </div>\r\n            <div className='form-control form-control-check'>\r\n                <label className='form-control-check-label'>Set Reminder</label>\r\n                <input className='form-control-check-input' type=\"checkbox\" \r\n                 value={reminder}\r\n                 checked={reminder}\r\n                 onChange={(e) => setReminder(e.currentTarget.checked)} \r\n                />\r\n               \r\n            </div>\r\n            <input type=\"submit\" value=\"Save Task\" className='btn btn-block' />\r\n        </form>\r\n    )\r\n}\r\n\r\nexport default AddTask","import React from 'react';\nimport Header from './components/header';\nimport Footer from './components/Footer';\nimport Tasks from './components/Tasks';\nimport AddTask from './components/AddTask';\nimport { useState, useEffect } from 'react';\n\n\nimport \"react-datetime/css/react-datetime.css\";\n\nclass Clock extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {date: new Date()};\n    }\n   \n    componentDidMount() {\n      this.timerID = setInterval(\n        () => this.tick(),\n      1000);\n    }\n\n    componentWillUnmount() {\n      clearInterval(this.timerID);\n    }\n\n    tick() {\n      this.setState ({\n        date: new Date()\n      });\n    }\n\n    render() {\n        return (\n            <div>\n               \n               <h2>{this.state.date.toLocaleString()}</h2>\n            </div>\n        );\n    }\n} \n\nfunction App(className='container') {\n  const [showAddTask, setShowAddTask] = useState(false)\n  \n  const [tasks, setTasks] = useState([])\n\n  useEffect(() => {\n   const getTasks  = async() => {\n     const tasksFromServer = await fetchTasks()\n     setTasks(tasksFromServer)\n   }\n \n   getTasks()\n}, []) \n\n// fetch tasks\nconst fetchTasks = async () => {\n  const res = await fetch('http://localhost:5000/tasks')\n  const data = await res.json()\n  console.log(data)\n return data\n} \n\nconst fetchTask = async (id) => {\n  const res = await fetch(`http://localhost:5000/tasks/${id}`)\n  const data = await res.json()\n  console.log(data)\n return data\n}\n      \n \nconst addTask = async (task) => {\n  const res = await fetch('http://localhost:5000/tasks', {\n    method: 'POST',\n    headers: {\n      'Content-type': 'application/json',\n    },\n    body: JSON.stringify(task),\n  })\n   const data = await res.json()\n   setTasks([...tasks, data])\n  }\n\n  // const id = Math.floor(Math.random()*10000) + 1\n  // const newTask = { id, ...task }\n  // setTasks([...tasks, newTask])\n\n\nconst deleteTask = async (id) => {\n  await fetch(`http://localhost:5000/tasks/${id}`, {\n    method: 'DELETE'\n  })\n    setTasks(tasks.filter((task) => task.id !== id))\n}\n\nconst toggleReminder = async (id) => {\n  const taskToToggle = await fetchTask(id)\n  const updTask = { ...taskToToggle, reminder: !taskToToggle.reminder }\n  const res = await fetch(`http://localhost:5000/tasks/${id}`, {\n    method: 'PUT',\n    headers: {\n     'Content-type': 'application/json'\n    },\n    body: JSON.stringify(updTask)\n  }\n  )\n\n  const data = await res.json()\n\n  setTasks(\n    tasks.map((task) => \n    task.id === id ? {...task, reminder: data.reminder } : task\n    )\n  )\n}\n  return (\n    <div>\n    \n    <Clock />\n    <Header title='Task Tracker' \n    onAdd = {() => setShowAddTask(!showAddTask)} showAdd={showAddTask} />\n    {showAddTask && <AddTask onAdd={addTask} /> } \n   {tasks.length > 0 ? <Tasks tasks={tasks} onDelete={deleteTask} onToggle={toggleReminder} /> : ('No tasks here!')}\n   <Footer />\n    </div>\n    \n  );\n   \n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}